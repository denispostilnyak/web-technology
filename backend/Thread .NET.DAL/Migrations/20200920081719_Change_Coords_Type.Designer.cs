// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thread_.NET.DAL.Context;

namespace Thread_.NET.DAL.Migrations
{
    [DbContext(typeof(ThreadContext))]
    [Migration("20200920081719_Change_Coords_Type")]
    partial class Change_Coords_Type
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Thread_.NET.DAL.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 6,
                            Body = "Sunt et officia odit consequuntur velit ad.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(1749),
                            IsDeleted = false,
                            PostId = 11,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(3639)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 20,
                            Body = "Quia aut voluptates consequatur asperiores officiis quod officiis voluptas enim.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(5672),
                            IsDeleted = false,
                            PostId = 19,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(5744)
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 7,
                            Body = "Incidunt et enim dolorem ab pariatur.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(6063),
                            IsDeleted = false,
                            PostId = 6,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(6091)
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 14,
                            Body = "Mollitia fugiat rem.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(6316),
                            IsDeleted = false,
                            PostId = 6,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(6348)
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            Body = "Et deleniti qui placeat autem saepe cum dolorem aliquam.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(6638),
                            IsDeleted = false,
                            PostId = 13,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(6654)
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 7,
                            Body = "Laudantium quod quo.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(6787),
                            IsDeleted = false,
                            PostId = 14,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(6819)
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 6,
                            Body = "Illo ex cum vel.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(7407),
                            IsDeleted = false,
                            PostId = 5,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(7450)
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 8,
                            Body = "Incidunt et dolorem quia architecto sed.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(7738),
                            IsDeleted = false,
                            PostId = 12,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(7767)
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 10,
                            Body = "Dolore commodi est dolorem sed atque iste voluptatem illo ut.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(8101),
                            IsDeleted = false,
                            PostId = 17,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(8125)
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            Body = "Occaecati sit ad qui nostrum animi recusandae ipsum illum.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(8411),
                            IsDeleted = false,
                            PostId = 8,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(8442)
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 14,
                            Body = "Natus ut excepturi sapiente dolor.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(8683),
                            IsDeleted = false,
                            PostId = 6,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(8713)
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 13,
                            Body = "Similique dolores aliquid animi cupiditate inventore.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(8961),
                            IsDeleted = false,
                            PostId = 17,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(8988)
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 18,
                            Body = "Possimus enim autem officia iure aut.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(9373),
                            IsDeleted = false,
                            PostId = 19,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(9396)
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 1,
                            Body = "Et quod facilis est et consequuntur commodi pariatur natus eius.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(9799),
                            IsDeleted = false,
                            PostId = 7,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 182, DateTimeKind.Local).AddTicks(9828)
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 3,
                            Body = "Corporis sequi molestiae ad accusantium voluptatibus tempore et ut accusantium.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 183, DateTimeKind.Local).AddTicks(166),
                            IsDeleted = false,
                            PostId = 16,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 183, DateTimeKind.Local).AddTicks(193)
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 4,
                            Body = "Delectus similique est.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 183, DateTimeKind.Local).AddTicks(397),
                            IsDeleted = false,
                            PostId = 4,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 183, DateTimeKind.Local).AddTicks(422)
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 5,
                            Body = "Doloremque dolore nihil sed omnis nulla et modi.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 183, DateTimeKind.Local).AddTicks(706),
                            IsDeleted = false,
                            PostId = 14,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 183, DateTimeKind.Local).AddTicks(730)
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 3,
                            Body = "Ex possimus aut aut delectus rerum neque.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 183, DateTimeKind.Local).AddTicks(1123),
                            IsDeleted = false,
                            PostId = 2,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 183, DateTimeKind.Local).AddTicks(1145)
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 3,
                            Body = "Quaerat voluptatem aut quo excepturi delectus quis neque quibusdam.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 183, DateTimeKind.Local).AddTicks(1439),
                            IsDeleted = false,
                            PostId = 8,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 183, DateTimeKind.Local).AddTicks(1458)
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 19,
                            Body = "Quis ad et.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 183, DateTimeKind.Local).AddTicks(1666),
                            IsDeleted = false,
                            PostId = 13,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 183, DateTimeKind.Local).AddTicks(1692)
                        });
                });

            modelBuilder.Entity("Thread_.NET.DAL.Entities.CommentReaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLike")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("CommentId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("CommentReactions");
                });

            modelBuilder.Entity("Thread_.NET.DAL.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 798, DateTimeKind.Local).AddTicks(9194),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/gauchomatt/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 799, DateTimeKind.Local).AddTicks(9207)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(983),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/craighenneberry/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(1064)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(1191),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/claudioguglieri/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(1224)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(1329),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/kaysix_dizzy/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(1363)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(1453),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/doooon/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(1486)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(1592),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/bargaorobalo/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(1623)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(1714),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/andrewofficer/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(1746)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(1841),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/tweetubhai/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(1863)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2076),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/kevinjohndayy/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2109)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2205),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/kevinoh/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2237)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2335),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/carlosjgsousa/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2364)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2461),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/raphaelnikson/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2492)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2603),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/alagoon/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2627)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2678),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/rehatkathuria/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2689)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2744),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/jayrobinson/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2776)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2883),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/vitor376/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(2915)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(3033),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/sydlawrence/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(3045)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(3156),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/davidcazalis/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(3176)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(3273),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/danpliego/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(3304)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(3366),
                            URL = "https://s3.amazonaws.com/uifaces/faces/twitter/chrisstumph/128.jpg",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 800, DateTimeKind.Local).AddTicks(3378)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(1714),
                            URL = "https://picsum.photos/640/480/?image=96",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(2885)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3487),
                            URL = "https://picsum.photos/640/480/?image=743",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3551)
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3627),
                            URL = "https://picsum.photos/640/480/?image=515",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3641)
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3696),
                            URL = "https://picsum.photos/640/480/?image=462",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3709)
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3763),
                            URL = "https://picsum.photos/640/480/?image=908",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3776)
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3828),
                            URL = "https://picsum.photos/640/480/?image=155",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3840)
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3894),
                            URL = "https://picsum.photos/640/480/?image=1023",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3908)
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3964),
                            URL = "https://picsum.photos/640/480/?image=44",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(3977)
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4031),
                            URL = "https://picsum.photos/640/480/?image=1046",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4045)
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4098),
                            URL = "https://picsum.photos/640/480/?image=194",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4111)
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4162),
                            URL = "https://picsum.photos/640/480/?image=368",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4174)
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4242),
                            URL = "https://picsum.photos/640/480/?image=394",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4256)
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4311),
                            URL = "https://picsum.photos/640/480/?image=575",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4325)
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4382),
                            URL = "https://picsum.photos/640/480/?image=389",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4399)
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4455),
                            URL = "https://picsum.photos/640/480/?image=290",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4469)
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4523),
                            URL = "https://picsum.photos/640/480/?image=595",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4536)
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4590),
                            URL = "https://picsum.photos/640/480/?image=957",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4601)
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4657),
                            URL = "https://picsum.photos/640/480/?image=783",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4669)
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4726),
                            URL = "https://picsum.photos/640/480/?image=756",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4739)
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4793),
                            URL = "https://picsum.photos/640/480/?image=985",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 814, DateTimeKind.Local).AddTicks(4807)
                        });
                });

            modelBuilder.Entity("Thread_.NET.DAL.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PreviewId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PreviewId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 2,
                            Body = "Sequi aut laborum sit dolorem nam autem modi ut quaerat.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 168, DateTimeKind.Local).AddTicks(7755),
                            IsDeleted = false,
                            PreviewId = 30,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 168, DateTimeKind.Local).AddTicks(8637)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 12,
                            Body = "Ea quidem neque ut quis accusamus corrupti incidunt nemo.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(154),
                            IsDeleted = false,
                            PreviewId = 30,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(203)
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 9,
                            Body = "qui",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(815),
                            IsDeleted = false,
                            PreviewId = 25,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(834)
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 20,
                            Body = @"At vitae vero voluptatem voluptas sint.
Sed laboriosam voluptatem quidem voluptas.
Nostrum possimus doloribus quibusdam laboriosam.
Ipsam eum est.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(5446),
                            IsDeleted = false,
                            PreviewId = 29,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(5490)
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 12,
                            Body = "Itaque itaque ipsum qui qui dolor. Eius ea alias. Accusamus est repudiandae.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7302),
                            IsDeleted = false,
                            PreviewId = 37,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7328)
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 5,
                            Body = "mollitia",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7419),
                            IsDeleted = false,
                            PreviewId = 30,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7428)
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 9,
                            Body = "rem",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7484),
                            IsDeleted = false,
                            PreviewId = 35,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7493)
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 2,
                            Body = "voluptate",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7547),
                            IsDeleted = false,
                            PreviewId = 24,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7555)
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 11,
                            Body = "harum",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7612),
                            IsDeleted = false,
                            PreviewId = 39,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7621)
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 10,
                            Body = @"Mollitia dolorem dignissimos vel veritatis quaerat.
In doloribus possimus.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7762),
                            IsDeleted = false,
                            PreviewId = 30,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7771)
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 17,
                            Body = "Beatae modi voluptas laboriosam earum tempora totam.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7877),
                            IsDeleted = false,
                            PreviewId = 24,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(7886)
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 15,
                            Body = "Recusandae aut est quasi cupiditate et est. Labore commodi dolor dolor in recusandae dolor. Placeat est deserunt. Omnis perspiciatis dolorem voluptate id quia est vel rerum in.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(8337),
                            IsDeleted = false,
                            PreviewId = 29,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(8348)
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 19,
                            Body = "Voluptas explicabo tempore sint incidunt tempora.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(8528),
                            IsDeleted = false,
                            PreviewId = 38,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(8572)
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 11,
                            Body = "Odio perspiciatis earum aut quae reprehenderit ducimus fugit.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(9410),
                            IsDeleted = false,
                            PreviewId = 24,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(9459)
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 20,
                            Body = "Ipsam laudantium aliquid omnis quibusdam omnis voluptas sapiente aut. Tenetur est vitae in eum quam. Quasi eos labore qui delectus. Ut soluta voluptas.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(9829),
                            IsDeleted = false,
                            PreviewId = 32,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 169, DateTimeKind.Local).AddTicks(9840)
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 2,
                            Body = "Sint mollitia recusandae nostrum ex blanditiis debitis.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 170, DateTimeKind.Local).AddTicks(231),
                            IsDeleted = false,
                            PreviewId = 34,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 170, DateTimeKind.Local).AddTicks(248)
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 13,
                            Body = "Possimus laboriosam neque doloribus in sapiente.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 170, DateTimeKind.Local).AddTicks(371),
                            IsDeleted = false,
                            PreviewId = 40,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 170, DateTimeKind.Local).AddTicks(380)
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 8,
                            Body = @"Doloribus voluptatem ex aliquid voluptate sed.
Aperiam repellat saepe cum officia totam ea tempore autem.
Autem ut est.
Excepturi omnis eligendi.
Eveniet dolore minima et natus sit officia impedit.
Id repellendus recusandae consequatur quae omnis et.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 170, DateTimeKind.Local).AddTicks(1037),
                            IsDeleted = false,
                            PreviewId = 21,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 170, DateTimeKind.Local).AddTicks(1048)
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 10,
                            Body = @"Optio et qui ipsum tenetur labore sequi sed ea.
Autem distinctio quisquam molestias officiis deserunt.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 170, DateTimeKind.Local).AddTicks(1285),
                            IsDeleted = false,
                            PreviewId = 25,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 170, DateTimeKind.Local).AddTicks(1295)
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 14,
                            Body = @"Tenetur facere necessitatibus vero aperiam sit dolor rerum ut dolorem.
Laborum officiis sed et.",
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 170, DateTimeKind.Local).AddTicks(1548),
                            IsDeleted = false,
                            PreviewId = 32,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 170, DateTimeKind.Local).AddTicks(1557)
                        });
                });

            modelBuilder.Entity("Thread_.NET.DAL.Entities.PostReaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLike")
                        .HasColumnType("bit");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("PostId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PostReactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 205, DateTimeKind.Local).AddTicks(8139),
                            IsLike = false,
                            PostId = 20,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 205, DateTimeKind.Local).AddTicks(9666),
                            UserId = 9
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(1213),
                            IsLike = false,
                            PostId = 19,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(1273),
                            UserId = 10
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(1407),
                            IsLike = false,
                            PostId = 8,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(1435),
                            UserId = 15
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(1541),
                            IsLike = false,
                            PostId = 20,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(1987),
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2183),
                            IsLike = false,
                            PostId = 2,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2199),
                            UserId = 12
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2305),
                            IsLike = true,
                            PostId = 16,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2330),
                            UserId = 18
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2463),
                            IsLike = false,
                            PostId = 17,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2493),
                            UserId = 9
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2622),
                            IsLike = true,
                            PostId = 14,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2642),
                            UserId = 19
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2735),
                            IsLike = true,
                            PostId = 11,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2748),
                            UserId = 10
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2813),
                            IsLike = true,
                            PostId = 8,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2840),
                            UserId = 7
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2963),
                            IsLike = false,
                            PostId = 2,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(2993),
                            UserId = 6
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3072),
                            IsLike = true,
                            PostId = 14,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3099),
                            UserId = 11
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3212),
                            IsLike = true,
                            PostId = 17,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3238),
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3405),
                            IsLike = true,
                            PostId = 1,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3420),
                            UserId = 6
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3500),
                            IsLike = true,
                            PostId = 4,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3514),
                            UserId = 7
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3631),
                            IsLike = true,
                            PostId = 12,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3655),
                            UserId = 19
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3766),
                            IsLike = true,
                            PostId = 12,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3792),
                            UserId = 21
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3901),
                            IsLike = false,
                            PostId = 10,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(3921),
                            UserId = 15
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(4029),
                            IsLike = false,
                            PostId = 11,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(4052),
                            UserId = 9
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(4163),
                            IsLike = true,
                            PostId = 20,
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 206, DateTimeKind.Local).AddTicks(4189),
                            UserId = 15
                        });
                });

            modelBuilder.Entity("Thread_.NET.DAL.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Thread_.NET.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AvatarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvatarId = 3,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 887, DateTimeKind.Local).AddTicks(477),
                            Email = "Valerie56@gmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "RAxVJjBw4VaA/Fgv7vDzBWIFiGXcZ9FGyRnEDhxmeL4=",
                            Salt = "ndxv+T8eHj53x/F1jxkBQcEfuyS2pK3yNawhVXE7h6E=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 887, DateTimeKind.Local).AddTicks(1394),
                            UserName = "Paula98"
                        },
                        new
                        {
                            Id = 2,
                            AvatarId = 18,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 900, DateTimeKind.Local).AddTicks(4885),
                            Email = "Sheridan.Moore33@gmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "GpDjx1ocDWbhKENKpI2NMhCvA3Dk/5kCGUQjaavvM5c=",
                            Salt = "nUhYYm3I/t0wnQUNnoy+Pc1xeslVcNOs1hhoyGjKqhA=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 900, DateTimeKind.Local).AddTicks(4995),
                            UserName = "Lawson_Paucek49"
                        },
                        new
                        {
                            Id = 3,
                            AvatarId = 13,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 912, DateTimeKind.Local).AddTicks(9014),
                            Email = "Flavie_Bednar@yahoo.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "VQ+SPBcPjryL3yl1ZpWW788wyuUis9cvqAhqkckQ8tg=",
                            Salt = "IwAzQC2ApY3OJsjT5IS0XursX0tkx1LrqtRzAVd3vN0=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 912, DateTimeKind.Local).AddTicks(9102),
                            UserName = "Alden.Boehm85"
                        },
                        new
                        {
                            Id = 4,
                            AvatarId = 14,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 925, DateTimeKind.Local).AddTicks(9163),
                            Email = "Trinity.Rosenbaum50@gmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "8vyo0HfCynGLXb0cSPkd9hsAWdlYnjaLVPb2IwDBjdc=",
                            Salt = "E4xtHJwHxeJ+GOd9vV0VZNNTyGxFB8CPmu96c+qQ2E4=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 925, DateTimeKind.Local).AddTicks(9254),
                            UserName = "Juliana92"
                        },
                        new
                        {
                            Id = 5,
                            AvatarId = 15,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 939, DateTimeKind.Local).AddTicks(7905),
                            Email = "Zoila.Simonis@hotmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "L49seZKXb2UasfxwvcEGU32m2SiYtflO1Qu+1vY4rec=",
                            Salt = "RzwpXNdaueDQ4sE62tAGujW+SQ/KXv9ZmX8f0t9cNjo=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 939, DateTimeKind.Local).AddTicks(8025),
                            UserName = "Buck62"
                        },
                        new
                        {
                            Id = 6,
                            AvatarId = 20,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 953, DateTimeKind.Local).AddTicks(4987),
                            Email = "Joannie_Block@yahoo.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "MogqDbTQ1BTiCK497biWL8kYw9CVIsO0WdO3LTQysOE=",
                            Salt = "ix8C02PCzSsxK2TCe0brWA5dxu0QbOithKd2/+kKXn8=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 953, DateTimeKind.Local).AddTicks(5078),
                            UserName = "Junior40"
                        },
                        new
                        {
                            Id = 7,
                            AvatarId = 9,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 966, DateTimeKind.Local).AddTicks(2820),
                            Email = "Elinore_Smith68@gmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "9KEKTBGbJ/B8Z9FQqA5lPXGpEjwV6K7ZejmhybT/Avw=",
                            Salt = "m2X1ivMu7fMs3ls9UkuBQ6+PJEEmXaj3Z2JuJ3Ws/+U=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 966, DateTimeKind.Local).AddTicks(2913),
                            UserName = "Trey34"
                        },
                        new
                        {
                            Id = 8,
                            AvatarId = 20,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 980, DateTimeKind.Local).AddTicks(8184),
                            Email = "Cyrus2@gmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "Vi27zYFWx6YHy4IDz/aFQtc+Vn0WK0uoM9mO4D4RX/M=",
                            Salt = "fYpsB2ss9TieY6Pz12qKjMefZ9tJ2g6KKZAWjrId/W4=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 980, DateTimeKind.Local).AddTicks(8280),
                            UserName = "Breanna.OReilly"
                        },
                        new
                        {
                            Id = 9,
                            AvatarId = 18,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 993, DateTimeKind.Local).AddTicks(2522),
                            Email = "Aniya44@hotmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "OQlq7plKykKSe2H7hzH1vSqu8SqXUVtC9HgN98ssUJI=",
                            Salt = "MMSIBD94Q6lH/vtW6fLLyhTDeUWYY5OM7oq6FYUenG0=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 17, 993, DateTimeKind.Local).AddTicks(2607),
                            UserName = "Ken76"
                        },
                        new
                        {
                            Id = 10,
                            AvatarId = 10,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 5, DateTimeKind.Local).AddTicks(5822),
                            Email = "Wellington88@yahoo.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "MYy344dQuZLX/5RnpdWGA11SendqS+rMgnZBRxkO+rE=",
                            Salt = "V7e4KQohtRMo3bLQu5Q1WG9nECGSVbM72+Kr63CiYOA=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 5, DateTimeKind.Local).AddTicks(5895),
                            UserName = "Maggie96"
                        },
                        new
                        {
                            Id = 11,
                            AvatarId = 7,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 18, DateTimeKind.Local).AddTicks(407),
                            Email = "Joelle.Kessler@gmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "4G+HdO5KtBDDyj7lB9xpz/gnElLvQo6uDXZhig69l9E=",
                            Salt = "QKwPTPy0BAtC35Hzo1xPNv3MaoIkQ9TISygWkh7JsJk=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 18, DateTimeKind.Local).AddTicks(480),
                            UserName = "Keenan_West"
                        },
                        new
                        {
                            Id = 12,
                            AvatarId = 19,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 30, DateTimeKind.Local).AddTicks(530),
                            Email = "Bethany0@yahoo.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "GxGT8rORMR/FAezpNqdRdp8iT+jROnLzAb7lfgeb8zI=",
                            Salt = "p66EVyirY/rY1Zb6iNF4jrAtW5ktx1AMrfW/2DyPc3o=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 30, DateTimeKind.Local).AddTicks(580),
                            UserName = "Dora27"
                        },
                        new
                        {
                            Id = 13,
                            AvatarId = 9,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 42, DateTimeKind.Local).AddTicks(674),
                            Email = "Mason69@gmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "1GW+NwS9m6538bWIV3iYA9XCh0zuJE09L99VEAoC/VA=",
                            Salt = "GgqwJzUK24yIZMMSB78IbcZCu9Dym7dJKjs0ivnJ0kk=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 42, DateTimeKind.Local).AddTicks(739),
                            UserName = "Steve33"
                        },
                        new
                        {
                            Id = 14,
                            AvatarId = 8,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 53, DateTimeKind.Local).AddTicks(7762),
                            Email = "Sidney.Bogan60@gmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "/qYBGRprbzZTWvKsKA1TXE0nL9XyO1xe2YyXf58MrYw=",
                            Salt = "T1uKSU8BEGe4G4vW7PtmcE1a+t84t/lrbz4jI3HNqg8=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 53, DateTimeKind.Local).AddTicks(7786),
                            UserName = "Ethan.Ondricka13"
                        },
                        new
                        {
                            Id = 15,
                            AvatarId = 14,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 65, DateTimeKind.Local).AddTicks(9146),
                            Email = "Garrison16@hotmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "LVgX7OqPFtq+YLKxomGcFC6LasbPqdlenien71+lL3o=",
                            Salt = "zolREQL0AN9b1WRlvdv2eT5P5Q66oJO/LPw3QDsUU8s=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 65, DateTimeKind.Local).AddTicks(9215),
                            UserName = "Furman.Renner"
                        },
                        new
                        {
                            Id = 16,
                            AvatarId = 6,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 77, DateTimeKind.Local).AddTicks(9634),
                            Email = "Kieran29@gmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "chYLeSY5qV9IYXsSQVutytPQGN59ooqjP808d2HjPIo=",
                            Salt = "MxIHEXRpwOcHiBAgIfN0uaeZ2PCfkU4Xu12ERi7iWaw=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 77, DateTimeKind.Local).AddTicks(9697),
                            UserName = "Alejandrin43"
                        },
                        new
                        {
                            Id = 17,
                            AvatarId = 14,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 90, DateTimeKind.Local).AddTicks(4022),
                            Email = "Montana_Herman@hotmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "pIvx49jIlJQEokvDBaG8AnhdICSkF1eb9Z1cbA/dPGw=",
                            Salt = "ZRURuae5KV+gNH9FfPZGpa0za0D7wwzYyzJft2IVkA0=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 90, DateTimeKind.Local).AddTicks(4105),
                            UserName = "Brandyn.Gleason"
                        },
                        new
                        {
                            Id = 18,
                            AvatarId = 7,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 102, DateTimeKind.Local).AddTicks(7387),
                            Email = "Hershel_Luettgen@hotmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "jI34/NiK1caJuE9bD2taeDL7lGQrvurQmIukbVp+PDo=",
                            Salt = "KvTkcC87Xa4tzfvuYbyljIce3RNTlOtIWN0XlL6ttpw=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 102, DateTimeKind.Local).AddTicks(7434),
                            UserName = "Arnold36"
                        },
                        new
                        {
                            Id = 19,
                            AvatarId = 6,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 115, DateTimeKind.Local).AddTicks(5716),
                            Email = "Theron73@hotmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "vwrUFnOl01h8LO9BCF2hh35IbNoBktiRUmas5fd4gQs=",
                            Salt = "yVuMt3fV0/o2UaDTOnx5irXH5yY34cS09aeY+Qec6V0=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 115, DateTimeKind.Local).AddTicks(5796),
                            UserName = "Angelica_Von"
                        },
                        new
                        {
                            Id = 20,
                            AvatarId = 16,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 133, DateTimeKind.Local).AddTicks(3592),
                            Email = "Rafael33@yahoo.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "b8RCgln97mJ5oKm7R4SLlxerCwBnOAq8RYzinunO3TU=",
                            Salt = "x1C70iCTL62OhvAuee3M/lnnKDE8fxPHG/xbdjxgFlM=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 133, DateTimeKind.Local).AddTicks(4918),
                            UserName = "Suzanne.Kautzer"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 149, DateTimeKind.Local).AddTicks(7621),
                            Email = "test@gmail.com",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Password = "drOsGCT3T3sTIlj6+b388G+vaCr2HhQepdnHBSFHUME=",
                            Salt = "8yii0fqnVOMdrzhHjfYbEaEVl6pXdqKWJ6g9S0bnHGw=",
                            UpdatedAt = new DateTime(2020, 9, 20, 11, 17, 18, 149, DateTimeKind.Local).AddTicks(7621),
                            UserName = "testUser"
                        });
                });

            modelBuilder.Entity("Thread_.NET.DAL.Entities.Comment", b =>
                {
                    b.HasOne("Thread_.NET.DAL.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thread_.NET.DAL.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Thread_.NET.DAL.Entities.CommentReaction", b =>
                {
                    b.HasOne("Thread_.NET.DAL.Entities.Comment", "Comment")
                        .WithMany("Reactions")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Thread_.NET.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Thread_.NET.DAL.Entities.Post", b =>
                {
                    b.HasOne("Thread_.NET.DAL.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Thread_.NET.DAL.Entities.Image", "Preview")
                        .WithMany()
                        .HasForeignKey("PreviewId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Thread_.NET.DAL.Entities.PostReaction", b =>
                {
                    b.HasOne("Thread_.NET.DAL.Entities.Post", "Post")
                        .WithMany("Reactions")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Thread_.NET.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Thread_.NET.DAL.Entities.RefreshToken", b =>
                {
                    b.HasOne("Thread_.NET.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Thread_.NET.DAL.Entities.User", b =>
                {
                    b.HasOne("Thread_.NET.DAL.Entities.Image", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId");
                });
#pragma warning restore 612, 618
        }
    }
}
