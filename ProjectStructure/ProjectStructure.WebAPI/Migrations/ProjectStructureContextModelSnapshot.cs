// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectStructure.DAL.Context;

namespace ProjectStructure.WebAPI.Migrations
{
    [DbContext(typeof(ProjectStructureContext))]
    partial class ProjectStructureContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectStructure.DAL.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(5000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ProjectDeadline")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TeamId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreatedAt = new DateTime(2020, 7, 16, 15, 19, 9, 289, DateTimeKind.Local).AddTicks(7828),
                            Decription = " Some",
                            IsActive = false,
                            Name = "First project",
                            ProjectDeadline = new DateTime(2020, 7, 21, 15, 19, 9, 297, DateTimeKind.Local).AddTicks(6478),
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CreatedAt = new DateTime(2020, 7, 16, 15, 19, 9, 297, DateTimeKind.Local).AddTicks(8144),
                            Decription = " Some",
                            IsActive = false,
                            Name = "Second project",
                            ProjectDeadline = new DateTime(2020, 7, 21, 15, 19, 9, 297, DateTimeKind.Local).AddTicks(8234),
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("ProjectStructure.DAL.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(5000);

                    b.Property<DateTime>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("PerfomerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerfomerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 7, 16, 15, 19, 9, 297, DateTimeKind.Local).AddTicks(9925),
                            Description = "Some",
                            FinishedAt = new DateTime(2020, 7, 20, 15, 19, 9, 298, DateTimeKind.Local).AddTicks(541),
                            Name = "First task",
                            PerfomerId = 1,
                            ProjectId = 1,
                            State = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 7, 16, 15, 19, 9, 298, DateTimeKind.Local).AddTicks(3706),
                            Description = "Some",
                            FinishedAt = new DateTime(2020, 7, 20, 15, 19, 9, 298, DateTimeKind.Local).AddTicks(3756),
                            Name = "Second task",
                            PerfomerId = 2,
                            ProjectId = 2,
                            State = 0
                        });
                });

            modelBuilder.Entity("ProjectStructure.DAL.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAtDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAtDate = new DateTime(2020, 7, 16, 15, 19, 9, 298, DateTimeKind.Local).AddTicks(5206),
                            Name = "Team 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAtDate = new DateTime(2020, 7, 16, 15, 19, 9, 298, DateTimeKind.Local).AddTicks(6516),
                            Name = "Team 2"
                        });
                });

            modelBuilder.Entity("ProjectStructure.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(2000, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "some",
                            FirstName = "Denis",
                            LastName = "Pos",
                            RegisteredAt = new DateTime(2010, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(2001, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "some",
                            FirstName = "Vasya",
                            LastName = "Ken",
                            RegisteredAt = new DateTime(2010, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("ProjectStructure.DAL.Models.Project", b =>
                {
                    b.HasOne("ProjectStructure.DAL.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("ProjectStructure.DAL.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("ProjectStructure.DAL.Models.Task", b =>
                {
                    b.HasOne("ProjectStructure.DAL.Models.User", "Perfomer")
                        .WithMany("Tasks")
                        .HasForeignKey("PerfomerId");

                    b.HasOne("ProjectStructure.DAL.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("ProjectStructure.DAL.Models.User", b =>
                {
                    b.HasOne("ProjectStructure.DAL.Models.Team", "Team")
                        .WithMany("Users")
                        .HasForeignKey("TeamId");
                });
#pragma warning restore 612, 618
        }
    }
}
